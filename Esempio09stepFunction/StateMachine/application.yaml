---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Template CloudFormation - esecuzione di una step funzion che
  - riceve il nome file da una lambda (in input come json filename)
  - copia staging in
  - cancella originale
  - copia staging out 
  - invio a bucket applicativo

Parameters:
  SFName:
    Type: String
    Default: 'Esempio09SF'
  SourcePath:
    Type: String
    Default: INPUT
  SourceBucket: 
    Type: String
    Default: ftp-simulator
  StagingBucket:
    Type: String
    Description: Bucket staging
    Default: alberto-input2
  StagingFilePathIN:
    Type: String
    Description: Path staging IN solo il nome del file
    Default: INCOMING
  StagingFilePathOUT:
    Type: String
    Description: Path staging OUT senza barre iniziali e finali
    Default: OUTGOING
  DestBucket:
    Type: String
    Description: Bucket di destinazione
    Default: application-bucket
  DestFileName:
    Type: String
    Description: Source Path destinazione solo il nome del file
    Default: destination.csv
  DestPath:
    Type: String
    Description: Path destinazione senza barre iniziali e finali
    Default: folder

Resources:
  Esempio09StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: "buckets-and-logs"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogDelivery'
                  - 'logs:GetLogDelivery'
                  - 'logs:UpdateLogDelivery'
                  - 'logs:DeleteLogDelivery'
                  - 'logs:ListLogDeliveries'
                  - 'logs:PutResourcePolicy'
                  - 'logs:DescribeResourcePolicies'
                  - 'logs:DescribeLogGroups'
                  - 'cloudwatch:PutMetricData'
                Resource: '*'
#              - Effect: Allow
#                Action:
#                  - 'lambda:InvokeFunction'
#                Resource: !Ref FtpFnArn
              - Effect: Allow
                Action: "s3:*"
                Resource: !Sub "arn:aws:s3:::${SourceBucket}/*"
              - Effect: Allow
                Action: "s3:*"
                Resource: !Sub "arn:aws:s3:::${SourceBucket}/"
              - Effect: Allow
                Action: "s3:*"
                Resource: !Sub "arn:aws:s3:::${DestBucket}/*"
              - Effect: Allow
                Action: "s3:*"
                Resource: !Sub "arn:aws:s3:::${DestBucket}/"
              - Effect: Allow
                Action: "s3:*"
                Resource: !Sub "arn:aws:s3:::${StagingBucket}/*"
              - Effect: Allow
                Action: "s3:*"
                Resource: !Sub "arn:aws:s3:::${StagingBucket}/"

  Esempio09StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3
      LogGroupName: !Sub /aws/vendedlogs/states/${SFName}-statemachine-logs
        
  Esempio09StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Ref SFName
      Type: STANDARD
      DefinitionUri: statemachine.yaml
      Role: !GetAtt Esempio09StateMachineRole.Arn
      DefinitionSubstitutions:
        SourcePath: !Ref SourcePath
        SourceBucket: !Ref SourceBucket
        StagingBucket: !Ref StagingBucket
        StagingFilePathIN: !Ref StagingFilePathIN
        StagingFilePathOUT: !Ref StagingFilePathOUT
        DestBucket: !Ref DestBucket
        DestPath: !Sub "States.Format('${DestPath}"
        DestFileName: !Sub "${DestFileName}')"
        DestKeyFieldSuffix: '.$'
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt Esempio09StateMachineLogGroup.Arn
        Level: ALL
        IncludeExecutionData: True


Outputs:
  StackName:
    Description: Deployed StackName for update
    Value: !Ref AWS::StackName
  StateMachineArn:
    Description: ARN of the created State Machine
    Value: !Ref Esempio09StateMachine
  StateMachineName:
    Description: ARN of the created State Machine
    Value: !GetAtt Esempio09StateMachine.Name
    