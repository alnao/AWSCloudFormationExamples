AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Template che crea una VPC, un database RDS MySql e una EC2 con apache/php con installato wordpress
# nota: questo template crea EC2 esposta in internet con porta 80 e ssh
# il RDS ha come regole di accesso (security group) l'accesso da ovunque
# questo non è best practice: Andrebbe fatto un ALB per esposizione in internet e regole rete più rigide come in fururi template

#SEE
# template ufficiali presi da https://github.com/aws-samples/ecs-refarch-cloudformation
# VPC: https://s3.amazonaws.com/ecs-refarch-cloudformation/infrastructure/vpc.yaml
# VPC: https://docs.aws.amazon.com/codebuild/latest/userguide/cloudformation-vpc-template.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-appframeworks-us-west-2.html
# https://gist.github.com/christophchamp/56c99b000f19fb8c4552a336f5961dbe
# https://stackoverflow.com/questions/61833725/value-of-property-vpczoneidentifier-must-be-of-type-list-of-string
# Wordpress
# see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-applications-eu-west-1.html
Parameters:
  CidrBlockVPC:
    Description: 'The IP address range to VPC'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.184.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x
  CidrBlockSubnetA:
    Description: 'The IP address range to Subnet A'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.184.1.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  CidrBlockSubnetB:
    Description: 'The IP address range to Subnet B'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.184.2.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  CidrBlockSubnetC:
    Description: 'The IP address range to Subnet A'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.184.3.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  CidrBlockSubnetD:
    Description: 'The IP address range to Subnet B'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.184.4.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  KeyName:
    Default: AlbertoNaoFormazione
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  DBName:
    Default: myDatabase
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    Default: utente
    Description: Username for MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
  DBPassword:
    Default: WordpressDB123
    NoEcho: 'true'
    Description: Password for MySQL database access
    Type: String
    MinLength: '10'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
  InstanceType:
    Description: The database instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.large
    # add other types
    ConstraintDescription: must select a valid database instance type.
Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-refarch-cloudformation/infrastructure/vpc.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName #usato come tag per le risorse
        VpcCIDR: !Ref CidrBlockVPC # "10.84.0.0/16"
        PublicSubnet1CIDR: !Ref CidrBlockSubnetA # "10.84.1.0/24"
        PublicSubnet2CIDR: !Ref CidrBlockSubnetB # "10.84.2.0/24"
        PrivateSubnet1CIDR: !Ref CidrBlockSubnetC # "10.84.3.0/24"
        PrivateSubnet2CIDR: !Ref CidrBlockSubnetD # "10.84.4.0/24"
  Database:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "./rdsMysql.yaml"
      Parameters:
        VpcId: !GetAtt VPC.Outputs.VPC
        DBName: !Ref DBName
        DBUser: !Ref DBUser
        DBPassword: !Ref DBPassword
        PrivateSubnet1: !GetAtt VPC.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPC.Outputs.PrivateSubnet2   
        SSHLocation: !Ref SSHLocation   
  EC2wordpress:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "./ec2singleWP.yaml"
      Parameters:
        VpcId: !GetAtt VPC.Outputs.VPC
        KeyName: !Ref KeyName
        InstanceType: !Ref InstanceType
        SSHLocation: !Ref SSHLocation
        DBName: !Ref DBName
        DBUser: !Ref DBUser
        DBPassword: !Ref DBPassword
        DBRootPassword: !Ref DBPassword
        Ec2SubnetId: !GetAtt VPC.Outputs.PublicSubnet1
        DBRDSreference: !GetAtt Database.Outputs.EndpointAddress
Outputs:
  StackName:
    Description: Deployed StackName for update
    Value: !Ref AWS::StackName
  WebsiteURL:
    Description: WordPress Website
    Value: !GetAtt EC2wordpress.Outputs.WebsiteURL