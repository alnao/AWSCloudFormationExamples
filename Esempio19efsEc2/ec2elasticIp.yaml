Description: EC2 with ElasticIP

Parameters:
  SecurityGroupGlobal:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Which SecurityGroup will be allowed to access Mount Targets for the FileSystem
  RegionAZ:
    Type: String
    Default: eu-west-1a
  EC2Ami:
    Type: String
    Default: ami-015232c01a82b847b #ami-0b4b7dae3cafc3b88 #
  InstanceType:
    Type: String
    Default: 't2.micro'
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
  KeyName:
    Type: String
    Default: 'AlbertoNaoFormazione'
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Which subnet would you like to use for your first Mount Target?
  EFSFileSystemId:
    Type: String
    Default: 'fs-xxxxxxxxxxxxxxxxxxxx'


Resources:
  WebServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref EC2Ami
      AvailabilityZone: !Ref RegionAZ #eu-west-1a
      InstanceType: !Ref InstanceType
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref SecurityGroupGlobal
      KeyName: !Ref KeyName
      Tags:
        - Key: "Name"
          Value: !Ref AWS::StackName 
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            # nota: non cancellare questa riga vuota che serve per andare a capo nel user-data
            - |+

            - |
              sudo yum install -y amazon-efs-utils
              sudo mkdir /mnt/efs
              sudo chmod 777 /mnt/efs 
            - 'sudo mount -t efs -o tls '
            - !Ref EFSFileSystemId
            - ':/ /mnt/efs '
            # nota: non cancellare questa riga vuota che serve per andare a capo nel user-data
            - |+
             
            - |
              echo "Site from $(hostname -f)" > /mnt/efs/index.html 
              sudo chmod 777 /mnt/efs/index.html 
              sudo yum install -y httpd
              sudo rmdir /var/www/html
              ln -s /mnt/efs /var/www/html
              service httpd start 
            - |+ #nota: grep -ni 'error\|failure' $(sudo find /var/log -name cfn-init\* -or -name cloud-init\*)

            - 'sudo /opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServer '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+ #nota: grep -ni 'error\|failure' $(sudo find /var/log -name cfn-init\* -or -name cloud-init\*)

# nota: non cancellare la riga sopra

# nota: in questo esempio Ã¨ sulla subnet pubblica ma creo comunque un EIP dedicato
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref WebServer

Outputs:
  WebsiteURL:
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - WebServer
          - PublicDnsName
        - /
    Description: WordPress Website
  InstanceIPAddress: #https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/EC2/EIP_With_Association.yaml
    Description: IP address of the newly created EC2 instance
    Value: !Ref EIP
  InstanceIPPrivate: #https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/EC2/EIP_With_Association.yaml
    Description: IP address of the newly created EC2 instance
    Value: !GetAtt WebServer.PrivateIp #or PublicIp


