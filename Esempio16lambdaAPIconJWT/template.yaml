AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Template CloudFormation - Esempio16lambdaAPIconJWT 
  template esegue una lambda che verifica un token JWT

Parameters:
  JwtKey:
    Type: String
    Description: Source Bucket 1
    Default: alberto-bello.1234
  Stage:
    Type: String
    Default: dev

Resources:
  Esempio16lambdaAPIconJWTIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
  Esempio16lambdaAPIconJWTApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      OpenApiVersion: 3.0.2
      CacheClusterEnabled: false
      CacheClusterSize: '0.5'
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
      MethodSettings:
        - ResourcePath: /
          HttpMethod: GET
          CachingEnabled: false
          CacheTtlInSeconds: 300
  Esempio16lambdaAPIconJWTLambda:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt Esempio16lambdaAPIconJWTIAMRole.Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId:
              Ref: Esempio16lambdaAPIconJWTApiGateway
      CodeUri: lambda
      Handler: esempio16lambdaAPIconJWT.entrypoint
      Runtime: python3.8
      MemorySize: 512
      Timeout: 900
      Environment: 
        Variables:
          JwtKey: !Ref JwtKey

Outputs:
  StackName:
    Description: Deployed StackName for update
    Value: !Ref AWS::StackName
  UrlGet:
    Description: Endpoint URL API REST
    Value: !Sub https://${Esempio16lambdaAPIconJWTApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
