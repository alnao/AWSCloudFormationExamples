AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Esempio di template CloudFormation con creazione di due regole EventBridge per eseguire due Lambda Function

Parameters:
  SourceBucket:
    Type: String
    Description: Source Bucket 1
    Default: alberto-input
  SourcePath:
    Type: String
    Description: Source Path
    Default: INPUT
  DestBucket:
    Type: String
    Description: Source Bucket 1
    Default: alberto-input2
  DestPath:
    Type: String
    Description: Source Path
    Default: OUTPUT
  StateTrigger:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
Resources:
  LambdaCopyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda
      Handler: s3_file_copy.entrypoint
      Runtime: python3.8
      MemorySize: 128
      Timeout: 900
      Role: !GetAtt LambdaIAMRole.Arn
      Environment: 
        Variables:
          SourceBucket: !Ref SourceBucket
          SourcePath: !Ref SourcePath
          DestBucket: !Ref DestBucket
          DestPath: !Ref DestPath
  LambdaDeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda
      Handler: s3_file_delete.entrypoint
      Runtime: python3.8
      MemorySize: 128
      Timeout: 900
      Role: !GetAtt LambdaIAMRole.Arn
      Environment: 
        Variables:
          SourceBucket: !Ref SourceBucket
          SourcePath: !Ref SourcePath

  EventBridgeTriggerRole:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: default
      State: !Ref StateTrigger
      EventPattern: 
        source: 
          - "aws.s3"
        detail-type:
          - "Object Created"
        detail: 
          bucket:
            name: 
              - !Ref SourceBucket
          object:
            key:
              - prefix: !Ref SourcePath
      Targets:
        - Id: id1
          Arn: !GetAtt LambdaCopyFunction.Arn
  EventBridgeCronRole:
    Type: AWS::Events::Rule
    Properties: 
      EventBusName: default
      State: !Ref StateTrigger
      ScheduleExpression: cron(00 09 ? * 1 *) #ogni domenica alle 9 di mattina (orario UDC)
      Targets:
        - Id: id1
          Arn: !GetAtt LambdaDeleteFunction.Arn

  PermissionForEventsToInvokeCopyLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref LambdaCopyFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeTriggerRole.Arn
      
  PermissionForEventsToInvokeDeleteLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref LambdaDeleteFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeTriggerRole.Arn

  LambdaIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
#              - Effect: Allow
#                Action:
#                  - 's3:GetBucketNotification'
#                  - 's3:PutBucketNotification'
#                Resource: !Join
#                - ''
#                - - 'arn:aws:s3:::'
#                  - !Ref SourceBucket
#                  - '/*'
              - Effect: Allow
                Action:
                  - 's3:GetObject'
#                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 's3:CopyObject'
                Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref SourceBucket
              - Effect: Allow
                Action:
                  - 's3:GetObject'
#                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 's3:CopyObject'
                Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref SourceBucket
                  - '/*'
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:CopyObject'
                Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref DestBucket
                  - '/*'
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:CopyObject'
                Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref DestBucket
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

Outputs:
  StackName:
    Description: Deployed StackName for update
    Value: !Ref AWS::StackName
  LambdaCopyFunction:
    Description: Lambda Copy Function ARN
    Value: !GetAtt LambdaCopyFunction.Arn
  LambdaDeleteFunction:
    Description: Lambda Delete Function ARN
    Value: !GetAtt LambdaDeleteFunction.Arn