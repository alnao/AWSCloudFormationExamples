AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS CloudFormation Examples by AlNao - 03 CloudFront e WebSite
#ßee https://gist.github.com/jonoirwinrsa/ceb2cba3d104720320f30e06b8c821f8
#ßee https://blog.canopas.com/deploy-a-website-with-aws-s3-cloudfront-using-cloudformation-c2199dc6c435
#ßee https://s3.amazonaws.com/solution-builders-us-east-1/amazon-cloudfront-secure-static-site/v0.11/c12fa047700b6237e6a8e74b6ec6050b.template

Parameters:
  NomeBucket:
    Type: String
    Description: Source Bucket Alberto ES04
    Default: alberto-es04-sito
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Ref NomeBucket
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: "origin access control for allowing cloudfront to access S3 bucket"
        Name:  !Join ['', ['static-hosting-OAC-',!Ref NomeBucket]]
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
#AWS::CloudFront::Distribution: Cannot use both Origin Access Control and Origin Access Identity on an origin
#  CloudFrontOriginAccessIdentity:
#    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
#    Properties:
#      CloudFrontOriginAccessIdentityConfig:
#        Comment: !Join ['', ['CloudFront OAI for',!Ref S3Bucket]]
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    # W3005 Obsolete DependsOn on resource (S3Bucket), dependency already enforced by a "Ref" at Resources/CloudFrontDistribution/Properties/DistributionConfig/Origins/0/DomainName/Fn::Join/1/0/Ref
    #DependsOn:
    #  - S3Bucket
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Join ['', [!Ref S3Bucket, '.s3.amazonaws.com']]
            Id: static-hosting
            S3OriginConfig:
              OriginAccessIdentity:  ""
#                !Join ['', ['origin-access-identity/cloudfront/', !Ref CloudFrontOriginAccessIdentity]]
            OriginAccessControlId: # !GetAtt CloudFrontOriginAccessControl.Id
              Ref: CloudFrontOriginAccessControl
        Enabled: "true"
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        HttpVersion: http2
#        Aliases:
#          - web.example.com
#        ViewerCertificate:
#          AcmCertificateArn: "arn:aws:acm:us-east-1:Id-of-IAM-User:certificate/1xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx"
#          MinimumProtocolVersion: TLSv1.2_2021
#          SslSupportMethod: sni-only
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          Compress: true
          DefaultTTL: 86400
          TargetOriginId: static-hosting
          ForwardedValues:
            QueryString: "false"
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: !Ref DefaultCachePolicy

  DefaultCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties: 
      CachePolicyConfig: 
        Name: cache-policy
        DefaultTTL: 10
        MaxTTL: 10
        MinTTL: 1
        ParametersInCacheKeyAndForwardedToOrigin: 
          CookiesConfig: 
            CookieBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig: 
            HeaderBehavior: none
          QueryStringsConfig: 
            QueryStringBehavior: none

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref NomeBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: CloudFrontDistribution1
            Effect: Allow
            Principal:
              Service: "cloudfront.amazonaws.com"
#              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontDistribution}"
            Action: "s3:GetObject"
            Resource: !Join ['', ['arn:aws:s3:::', !Ref NomeBucket, '/*']]
#            Condition:
#              StringEquals:
#                AWS:SourceArn: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontDistribution}"
#  #                AWS:SourceArn: !Sub "arn:aws:cloudfront::Id-of-IAM-User:distribution/${CloudFrontDistribution}"
Outputs:
  StackName:
    Description: Deployed StackName
    Value: !Ref AWS::StackName
  S3BucketName:
    Value:
      Ref: S3Bucket
  CloudFrontDist:
    Value:
      Ref: CloudFrontDistribution
  CloudFrontDomain:
    Description: Cloud Front Distribution Domain Url
    Value:
      Fn::GetAtt: CloudFrontDistribution.DomainName
  CloudFrontId:
    Description: Cloud Front Distribution ID
    Value:
      Fn::GetAtt: CloudFrontDistribution.Id