AWSTemplateFormatVersion: '2010-09-09'
Description: Template per crare una istanza EC2
#Questo si ispira al template ufficiale di esempio
#https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/EC2/EC2InstanceWithSecurityGroupSample.yaml
#con in aggiunta la configurazione di rete su una VPC e una Subnet specifica (questo esempio non funziona nella VPC di default).
#In questo esempio presente anche uno script user-data per la creazione di un web-server con una pagina di prova
#e il comando cfn-signal per la conferma a CloudFormation che l'istanza Ã¨ correttamente avviata.'
Parameters:
  SubnetId:
    Description: 'Please choose a Subnet Id'
    Type: AWS::EC2::Subnet::Id
    ConstraintDescription: must be the id of an existing Subnet.
  VpcId:
    Description: Id of Vpc
    Type: AWS::EC2::VPC::Id
    ConstraintDescription: must be the id of an existing VPC
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge] 
#      ,t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
#      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
#      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
#      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge,
#      g3.8xlarge,
#      r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r3.12xlarge,
#      i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge,
#      d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType'
      #https://stackoverflow.com/questions/56481328/aws-cloudformation-error-with-security-groups-and-network-interfaces-invalid-pa
      #SecurityGroups: [!Ref 'InstanceSecurityGroup']
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'LatestAmiId'
      Tags:
        - Key: "Name"
          Value: !Ref AWS::StackName
      #https://stackoverflow.com/questions/73134456/cloudformation-no-default-vpc-for-this-user-groupname-is-only-supported-for-e
      NetworkInterfaces: 
      - GroupSet: [!Ref 'InstanceSecurityGroup']
        SubnetId: !Ref SubnetId
        AssociatePublicIpAddress: true
        DeviceIndex: '0'
        DeleteOnTermination: true
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            # nota: non cancellare questa riga vuota che serve per andare a capo nel user-data
            - |+

            - |
              sudo yum install -y amazon-efs-utils
            # nota: non cancellare questa riga vuota che serve per andare a capo nel user-data
            - |+
             
            - |
              sudo yum install -y httpd
              echo "Site from $(hostname -f)" > /var/www/html/index.html 
              service httpd start 
            - |+ #nota: grep -ni 'error\|failure' $(sudo find /var/log -name cfn-init\* -or -name cloud-init\*)

            - 'sudo /opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource EC2Instance ' #nota EC2Instance corrisponde al nome del yaml
            - '         --region '
            - !Ref 'AWS::Region'
            - |+ #nota: grep -ni 'error\|failure' $(sudo find /var/log -name cfn-init\* -or -name cloud-init\*)

# nota: non cancellare la riga vuota sopra
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref 'VpcId'
      #GroupName: !Ref AWS::StackName # GroupName is only supported for EC2-Classic and default VPC.
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation'
      - CidrIp: '0.0.0.0/0'
        IpProtocol: TCP
        FromPort: 80
        ToPort: 80
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, AvailabilityZone]
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicIp]
#ssh ec2-user@34.245.37.120 -i /C/Transito/000_FILES/Keys/20230116_Formazione/AlbertoNaoFormazione.pem