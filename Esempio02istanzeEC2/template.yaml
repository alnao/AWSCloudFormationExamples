AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Examples by AlNao - 02 Istanze EC2
# SEE https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/EC2/EC2InstanceWithSecurityGroupSample.yaml
# con in aggiunta la configurazione di rete su una VPC e una Subnet specifica (questo esempio non funziona nella VPC di default).
# In questo esempio presente anche uno script user-data per la creazione di un web-server con una pagina di prova

Parameters:
  RegionAZ:
    Type: String
    Default: eu-west-1b
  SubnetId:
    Description: 'Please choose a Subnet Id'
    Type: AWS::EC2::Subnet::Id
    ConstraintDescription: must be the id of an existing Subnet.
  VpcId:
    Description: Id of Vpc
    Type: AWS::EC2::VPC::Id
    ConstraintDescription: must be the id of an existing VPC
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge] 
#      ,t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
#      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
#      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
#      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge,
#      g3.8xlarge,
#      r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r3.12xlarge,
#      i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge,
#      d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  #EnvName:
  #  Type: String
  #  AllowedValues: [dev,prod]
  #  Default: dev
  EnvName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /nao/envName

  WithMetadata:
    Type: String
    AllowedValues: [true,false]
    Default: false
Conditions:
  CreateVolume: !Equals [!Ref EnvName, prod]
  WithMetadata: !Equals [!Ref WithMetadata, true]
  WithoutMetadata: !Equals [!Ref WithMetadata, false]

Resources:
  VolumeAttachment:
    Type: AWS::EC2::VolumeAttachment
    Condition: CreateVolume
    Properties:
      InstanceId: !Ref EC2Instance
      VolumeId: !Ref Volume
      Device: /dev/sdh
  Volume:
    Type: AWS::EC2::Volume
    Condition: CreateVolume
    Properties:
      Size: 10
      AvailabilityZone: !Ref RegionAZ #!GetAtt Instance.AvailabilityZone

  EC2Instance:
    Type: AWS::EC2::Instance
    Condition: WithoutMetadata
    Properties:
      InstanceType: !Ref 'InstanceType'
      #https://stackoverflow.com/questions/56481328/aws-cloudformation-error-with-security-groups-and-network-interfaces-invalid-pa
      #SecurityGroups: [!Ref 'InstanceSecurityGroup']
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'LatestAmiId'
      Tags:
        - Key: "Name"
          Value: !Ref AWS::StackName
      #https://stackoverflow.com/questions/73134456/cloudformation-no-default-vpc-for-this-user-groupname-is-only-supported-for-e
      NetworkInterfaces: 
      - GroupSet: [!Ref 'InstanceSecurityGroup']
        SubnetId: !Ref SubnetId
        AssociatePublicIpAddress: true
        DeviceIndex: '0'
        DeleteOnTermination: true
      UserData: 
        Fn::Base64: |
          #!/bin/bash -xe
          sudo yum -y install httpd
          sudo yum update -y aws-cfn-bootstrap
          sudo yum install -y amazon-efs-utils
          echo "Site from $(hostname -f)" > /var/www/html/index.html 
          sudo systemctl enable httpd
          sudo systemctl start httpd
          #sudo /opt/aws/bin/cfn-signal -e $? 
          #/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyInstance --region ${AWS::Region}

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref 'VpcId'
      #GroupName: !Ref AWS::StackName # GroupName is only supported for EC2-Classic and default VPC.
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation'
      - CidrIp: '0.0.0.0/0'
        IpProtocol: TCP
        FromPort: 80
        ToPort: 80

  EC2InstanceWithMetadata:
    Type: AWS::CloudFormation::Stack
    Condition: WithMetadata
    Properties:
      TemplateURL: "./cfn_helper_scripts.yaml"
      Parameters:
        SubnetId: !Ref SubnetId
        VpcId: !Ref VpcId
        KeyName: !Ref KeyName
        InstanceType: !Ref InstanceType
        SSHLocation: !Ref SSHLocation
        #LatestAmiId: !Ref LatestAmiId
        InstanceSecurityGroup: !Ref InstanceSecurityGroup

Outputs:
  StackName:
    Description: Deployed StackName for update
    Value: !Ref AWS::StackName
#WithoutMetadata
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Condition: WithoutMetadata
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Condition: WithoutMetadata
    Value: !GetAtt [EC2Instance, PublicIp]
#WithMetadata    
  PublicDNSWithMetadata:
    Description: Public DNSName of the newly created EC2 instance
    Condition: WithMetadata
    Value: !GetAtt EC2InstanceWithMetadata.Outputs.PublicDNS
  PublicIPWithMetadata:
    Description: Public IP address of the newly created EC2 instance
    Condition: WithMetadata
    Value: !GetAtt EC2InstanceWithMetadata.Outputs.PublicIP
