#see  https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html
# see https://mckinnel.me/set-up-aws-client-vpn.html
Description: VPC clientVPCendPoint

Parameters:
  VPCid:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Application should be deployed to
  SAMLProviderArn:
    Description: SAMLProviderArn
    Type: String
  SelfServiceSAMLProviderArn:
    Description: SelfServiceSAMLProviderArn
    Type: String
  CidrBlockVPC:
    Description: CidrBlockVPCclient
    Type: String
  CidrBlockVPCclient: #MUST be deferent CidrBlockVPC
    Description: CidrBlockVPCclient
    Type: String
  ServerCertificateArn:
    Description: ServerCertificateArn
    Type: String
  SSHLocation:
    Description: SSHLocation
    Type: String
  DnsServers:
    Description: DnsServers
    Type: String
  PrivateSubnet1:
    Description: Subnet ID of private subnet 1
    Type: AWS::EC2::Subnet::Id #https://mckinnel.me/set-up-aws-client-vpn.html
  PrivateSubnet2:
    Description: Subnet ID of private subnet 2
    Type: AWS::EC2::Subnet::Id #https://mckinnel.me/set-up-aws-client-vpn.html
Resources:
  Endpoint: 
    Type: AWS::EC2::ClientVpnEndpoint # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html
    Properties: 
      AuthenticationOptions: # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientauthenticationrequest.html
      - Type: "federated-authentication"
        FederatedAuthentication:  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-federatedauthenticationrequest.html
          SAMLProviderArn: !Ref SAMLProviderArn 
          SelfServiceSAMLProviderArn: !Ref SelfServiceSAMLProviderArn 
      ClientCidrBlock: !Ref CidrBlockVPCclient #"10.0.0.0/22" 
      ConnectionLogOptions: 
        Enabled: true
        CloudwatchLogGroup: !Ref LogsGroup
      Description: "My Client VPN Endpoint"
      DnsServers: 
        - !Ref DnsServers #"10.84.0.2"
      SecurityGroupIds:
        - !Ref SecurityGroup
      ServerCertificateArn: !Ref ServerCertificateArn #"arn:aws:acm:us-east-1:111122223333:certificate/12345678-1234-1234-1234-123456789012"
      SplitTunnel: true
      TransportProtocol: "tcp"
      VpcId: !Ref VPCid #!GetAtt LAMPesVPC.Outputs.VPC  #ex !Ref LAMPesVPC
  LogsGroup:
    Type: AWS::Logs::LogGroup
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Group of ClientVpnEndpoint
      GroupName: !Ref AWS::StackName #'ServerSecurityGroup'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPCid #!GetAtt LAMPesVPC.Outputs.VPC  #ex !Ref LAMPesVPC
      Tags:
      - Key: "Name"
        Value: !Ref AWS::StackName #"LAMPesASG" 
  TargetNetworkAss1: #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html
    Type: AWS::EC2::ClientVpnTargetNetworkAssociation
    Properties: 
      ClientVpnEndpointId: !Ref Endpoint
      SubnetId: !Ref PrivateSubnet1
  TargetNetworkAss2: #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html
    Type: AWS::EC2::ClientVpnTargetNetworkAssociation
    Properties: 
      ClientVpnEndpointId: !Ref Endpoint
      SubnetId: !Ref PrivateSubnet2
#  
#  Route1:
#    Type: AWS::EC2::ClientVpnRoute
#    DependsOn: TargetNetworkAss1 #prevent InvalidClientVpnActiveAssociationNotFound https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html
#    Properties: 
#      ClientVpnEndpointId: !Ref Endpoint
#      Description: "Route to VPC via Subnet 1"
#      DestinationCidrBlock: !Ref CidrBlockVPC # 10.84.0.0/16
#      TargetVpcSubnetId: !Ref PrivateSubnet1 # 10.84.3.0/24
#  Route2:
#    Type: AWS::EC2::ClientVpnRoute
#    DependsOn: TargetNetworkAss2 #prevent InvalidClientVpnActiveAssociationNotFound https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html
#    Properties: 
#      ClientVpnEndpointId: !Ref Endpoint
#      Description: "Route to VPC via Subnet 2"
#      DestinationCidrBlock: !Ref CidrBlockVPC # 10.84.0.0/16
#      TargetVpcSubnetId: !Ref PrivateSubnet2 # 10.84.4.0/24
  AuthRule: #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html
    Type: AWS::EC2::ClientVpnAuthorizationRule
    Properties: 
      #AccessGroupId: String #alternative of AuthorizeAllGroups
      AuthorizeAllGroups: true 
      ClientVpnEndpointId: !Ref Endpoint
      Description: EndpointAuthRule
      TargetNetworkCidr: "0.0.0.0/0" #!Ref CidrBlockVPCclient #"10.84.0.0/16"
Outputs:
  Endpoint:
    Description: A reference to the Endpoint
    Value: !Ref Endpoint
  SecurityGroup:
    Description: A reference to the Endpoint SecurityGroup
    Value: !Ref SecurityGroup