AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambda function

Parameters:
  DestBucket:
    Type: String
    Default: alberto-input2
  DestFilePath:
    Type: String
    Default: OUTPUT

Resources:
  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda
      Handler: process.entrypoint
      Runtime: python3.8
      MemorySize: 128
      Environment: 
        Variables:
          DestBucket: !Ref DestBucket
          DestFilePath: !Ref DestFilePath
      Role: !GetAtt LambdaIamRole.Arn
#      Policies:
#        - Statement:
#          - Sid: AllowAccessToStepFunction
#            Effect: Allow
#            Action: "states:*"
#            Resource: !Ref StateMachineArn
#        - StepFunctionsExecutionPolicy:
#          StateMachineName: !Ref StateMachineName

  LambdaIamRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 's3:GetObject'
                Resource: !Sub "arn:aws:s3:::${DestBucket}/*"
              - Effect: Allow
                Action: 's3:GetObject'
                Resource: !Sub "arn:aws:s3:::${DestBucket}/"
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

Outputs:
  StackName:
    Description: Deployed StackName for update
    Value: !Ref AWS::StackName
  ProcessArn: #used in main template
    Description: ARN of the created Lambda
    Value: !GetAtt Lambda.Arn
